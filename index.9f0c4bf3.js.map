{"mappings":"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","sources":["<anon>","src/index.js","src/js/film-api.js","src/js/add-to-queue.js","src/js/add-to-watched.js","src/js/modal-one-film.js","src/js/pagination.js","src/js/search-error.js"],"sourcesContent":["// import './sass/main.scss';\n\n\n\n\n\n\n(()=>{\n    const refs = {\n        openModalBtn: document.querySelector(\"[data-modal-open]\"),\n        closeModalBtn: document.querySelector(\"[data-modal-close]\"),\n        modal: document.querySelector(\"[data-modal]\")\n    };\n    refs.openModalBtn.addEventListener(\"click\", toggleModal);\n    refs.closeModalBtn.addEventListener(\"click\", toggleModal);\n    function toggleModal() {\n        refs.modal.classList.toggle(\"is-hidden\");\n    }\n})();\n\n\nconst $baa48fd5a30d32e8$var$apiKey = \"ddd78f0e80e0d30735adfd081ca2dc47\";\nconst $baa48fd5a30d32e8$var$apiUrl = `https://api.themoviedb.org/3/movie/popular?api_key=${$baa48fd5a30d32e8$var$apiKey}`;\nasync function $baa48fd5a30d32e8$var$getMovieDetails(movieId) {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${$baa48fd5a30d32e8$var$apiKey}&language=en-US`;\n    try {\n        const response = await fetch(url);\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error(\"Error while fetching movie details:\", error);\n        return null;\n    }\n}\nasync function $baa48fd5a30d32e8$var$getPopularMovies(page = 1) {\n    const urlWithPage = `${$baa48fd5a30d32e8$var$apiUrl}&page=${page}`;\n    try {\n        const response = await fetch(urlWithPage);\n        const data = await response.json();\n        const movies = data.results;\n        const detailedMovies = await Promise.all(movies.map(async (movie)=>{\n            const details = await $baa48fd5a30d32e8$var$getMovieDetails(movie.id);\n            return {\n                ...movie,\n                ...details\n            };\n        }));\n        return {\n            movies: detailedMovies,\n            totalPages: data.total_pages\n        };\n    } catch (error) {\n        console.error(\"Error while fetching data:\", error);\n        return {\n            movies: [],\n            totalPages: 0\n        };\n    }\n}\nfunction $baa48fd5a30d32e8$export$605b145a07818080(movie) {\n    const movieItem = document.createElement(\"div\");\n    movieItem.classList.add(\"movie-item\");\n    const moviePoster = document.createElement(\"img\");\n    moviePoster.src = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n    moviePoster.alt = movie.title;\n    movieItem.appendChild(moviePoster);\n    const movieTitle = document.createElement(\"h2\");\n    movieTitle.textContent = movie.title;\n    movieItem.appendChild(movieTitle);\n    const genreNames = movie.genres.map((genre)=>genre.name);\n    const movieGenres = document.createElement(\"p\");\n    movieGenres.textContent = `Genres: ${genreNames.join(\", \")}`;\n    movieItem.appendChild(movieGenres);\n    const movieYear = document.createElement(\"p\");\n    const releaseYear = new Date(movie.release_date).getFullYear();\n    movieYear.textContent = `Year: ${releaseYear}`;\n    movieItem.appendChild(movieYear);\n    const movieRating = document.createElement(\"p\");\n    const rating = movie.vote_average.toFixed(1);\n    movieRating.textContent = `Rating: ${rating}`;\n    movieItem.appendChild(movieRating);\n    return movieItem;\n}\nfunction $baa48fd5a30d32e8$export$80c33a899040816b(movies) {\n    const filmList = document.querySelector(\".film-list\");\n    filmList.innerHTML = \"\";\n    const movieItems = movies.map((movie)=>$baa48fd5a30d32e8$export$605b145a07818080(movie));\n    filmList.append(...movieItems);\n}\nasync function $baa48fd5a30d32e8$var$loadMoviesPage(page) {\n    const { movies: movies, totalPages: totalPages } = await $baa48fd5a30d32e8$var$getPopularMovies(page);\n    $baa48fd5a30d32e8$export$80c33a899040816b(movies);\n    $baa48fd5a30d32e8$var$renderPagination(totalPages, page);\n}\nasync function $baa48fd5a30d32e8$var$main() {\n    $baa48fd5a30d32e8$var$loadMoviesPage(1);\n}\nwindow.addEventListener(\"load\", $baa48fd5a30d32e8$var$main);\nfunction $baa48fd5a30d32e8$var$renderPagination(totalPages, currentPage) {\n    const paginationContainer = document.querySelector(\".pagination\");\n    paginationContainer.innerHTML = \"\";\n    const visiblePages = 5;\n    const maxButtonsToShow = 1000;\n    const increment = 15;\n    let startPage = 1;\n    let endPage = Math.min(startPage + visiblePages - 1, totalPages);\n    if (totalPages > visiblePages) {\n        const half = Math.floor(visiblePages / 2);\n        startPage = Math.max(currentPage - half, 1);\n        endPage = startPage + visiblePages - 1;\n        if (endPage >= maxButtonsToShow) {\n            endPage = maxButtonsToShow;\n            startPage = Math.max(endPage - visiblePages + 1, 1);\n        }\n    }\n    const firstPageButton = document.createElement(\"button\");\n    firstPageButton.textContent = \"<<\";\n    firstPageButton.classList.add(\"page-button\", \"first-button\");\n    firstPageButton.addEventListener(\"click\", ()=>{\n        $baa48fd5a30d32e8$var$loadMoviesPage(1);\n    });\n    paginationContainer.appendChild(firstPageButton);\n    if (startPage > 1) {\n        const ellipsis1 = document.createElement(\"span\");\n        ellipsis1.textContent = \"...\";\n        paginationContainer.appendChild(ellipsis1);\n    }\n    for(let page = startPage; page <= endPage; page++){\n        const pageButton = document.createElement(\"button\");\n        pageButton.textContent = page;\n        pageButton.classList.add(\"page-button\");\n        if (page === currentPage) pageButton.classList.add(\"active\");\n        pageButton.addEventListener(\"click\", ()=>{\n            $baa48fd5a30d32e8$var$loadMoviesPage(page);\n        });\n        paginationContainer.appendChild(pageButton);\n    }\n    if (endPage < totalPages) {\n        const ellipsis2 = document.createElement(\"span\");\n        ellipsis2.textContent = \"...\";\n        paginationContainer.appendChild(ellipsis2);\n        const lastPage = Math.min(endPage + increment, totalPages);\n        const lastPageButton = document.createElement(\"button\");\n        lastPageButton.textContent = lastPage;\n        lastPageButton.classList.add(\"page-button\");\n        lastPageButton.addEventListener(\"click\", ()=>{\n            $baa48fd5a30d32e8$var$loadMoviesPage(lastPage);\n        });\n        paginationContainer.appendChild(lastPageButton);\n    }\n    const lastPageButton = document.createElement(\"button\");\n    lastPageButton.textContent = \">>\";\n    lastPageButton.classList.add(\"page-button\", \"last-button\");\n    lastPageButton.addEventListener(\"click\", ()=>{\n        const nextPage = Math.min(currentPage + 1, totalPages);\n        $baa48fd5a30d32e8$var$loadMoviesPage(nextPage);\n    });\n    paginationContainer.appendChild(lastPageButton);\n}\n\n\nfunction $6f12a9c87ac18ced$var$toggleNotification(flag) {\n    const notifyEl = document.querySelector(\".notification\");\n    console.log(flag);\n    if (flag) {\n        console.log(\"step1\");\n        notifyEl.classList.add(\"opacityZero\");\n        return;\n    }\n    console.log(\"step2\");\n    notifyEl.classList.remove(\"opacityZero\");\n    setTimeout(()=>{\n        notifyEl.classList.add(\"opacityZero\");\n    }, 5000);\n    return;\n}\n\n\n\n\n//# sourceMappingURL=index.9f0c4bf3.js.map\n","// import './sass/main.scss';\nimport './js/film-api';\nimport './js/add-to-queue';\nimport './js/add-to-watched';\nimport './js/modal-one-film';\nimport './js/pagination';\nimport './js/search-error';\n","","","","(() => {\n  const refs = {\n    openModalBtn: document.querySelector('[data-modal-open]'),\n    closeModalBtn: document.querySelector('[data-modal-close]'),\n    modal: document.querySelector('[data-modal]'),\n  };\n\n  refs.openModalBtn.addEventListener('click', toggleModal);\n  refs.closeModalBtn.addEventListener('click', toggleModal);\n\n  function toggleModal() {\n    refs.modal.classList.toggle('is-hidden');\n  }\n})();\n","const apiKey = 'ddd78f0e80e0d30735adfd081ca2dc47';\nconst apiUrl = `https://api.themoviedb.org/3/movie/popular?api_key=${apiKey}`;\n\nasync function getMovieDetails(movieId) {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}&language=en-US`;\n    try {\n        const response = await fetch(url);\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error('Error while fetching movie details:', error);\n        return null;\n    }\n}\n\nasync function getPopularMovies(page = 1) {\n    const urlWithPage = `${apiUrl}&page=${page}`;\n    try {\n        const response = await fetch(urlWithPage);\n        const data = await response.json();\n        const movies = data.results;\n        const detailedMovies = await Promise.all(movies.map(async movie => {\n            const details = await getMovieDetails(movie.id);\n            return { ...movie, ...details };\n        }));\n        return { movies: detailedMovies, totalPages: data.total_pages };\n    } catch (error) {\n        console.error('Error while fetching data:', error);\n        return { movies: [], totalPages: 0 };\n    }\n}\n\nexport function renderMovieCard(movie) {\n    const movieItem = document.createElement('div');\n    movieItem.classList.add('movie-item');\n\n    const moviePoster = document.createElement('img');\n    moviePoster.src = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n    moviePoster.alt = movie.title;\n    movieItem.appendChild(moviePoster);\n\n    const movieTitle = document.createElement('h2');\n    movieTitle.textContent = movie.title;\n    movieItem.appendChild(movieTitle);\n\n    const genreNames = movie.genres.map(genre => genre.name);\n    const movieGenres = document.createElement('p');\n    movieGenres.textContent = `Genres: ${genreNames.join(', ')}`;\n    movieItem.appendChild(movieGenres);\n\n    const movieYear = document.createElement('p');\n    const releaseYear = new Date(movie.release_date).getFullYear();\n    movieYear.textContent = `Year: ${releaseYear}`;\n    movieItem.appendChild(movieYear);\n\n    const movieRating = document.createElement('p');\n    const rating = movie.vote_average.toFixed(1);\n    movieRating.textContent = `Rating: ${rating}`;\n    movieItem.appendChild(movieRating);\n\n    return movieItem;\n}\n\nexport function displayMovies(movies) {\n    const filmList = document.querySelector('.film-list');\n    filmList.innerHTML = '';\n\n    const movieItems = movies.map(movie => renderMovieCard(movie));\n\n    filmList.append(...movieItems);\n}\n\nasync function loadMoviesPage(page) {\n    const { movies, totalPages } = await getPopularMovies(page);\n    displayMovies(movies);\n    renderPagination(totalPages, page);\n}\n\nasync function main() {\n    loadMoviesPage(1);\n}\n\nwindow.addEventListener('load', main);\n\nfunction renderPagination(totalPages, currentPage) {\n    const paginationContainer = document.querySelector('.pagination');\n    paginationContainer.innerHTML = '';\n\n    const visiblePages = 5;\n    const maxButtonsToShow = 1000;\n    const increment = 15;\n\n    let startPage = 1;\n    let endPage = Math.min(startPage + visiblePages - 1, totalPages);\n\n    if (totalPages > visiblePages) {\n        const half = Math.floor(visiblePages / 2);\n        startPage = Math.max(currentPage - half, 1);\n        endPage = startPage + visiblePages - 1;\n        if (endPage >= maxButtonsToShow) {\n            endPage = maxButtonsToShow;\n            startPage = Math.max(endPage - visiblePages + 1, 1);\n        }\n    }\n\n    const firstPageButton = document.createElement('button');\n    firstPageButton.textContent = '<<';\n    firstPageButton.classList.add('page-button', 'first-button');\n    firstPageButton.addEventListener('click', () => {\n        loadMoviesPage(1);\n    });\n    paginationContainer.appendChild(firstPageButton);\n\n    if (startPage > 1) {\n        const ellipsis1 = document.createElement('span');\n        ellipsis1.textContent = '...';\n        paginationContainer.appendChild(ellipsis1);\n    }\n\n    for (let page = startPage; page <= endPage; page++) {\n        const pageButton = document.createElement('button');\n        pageButton.textContent = page;\n        pageButton.classList.add('page-button');\n        if (page === currentPage) {\n            pageButton.classList.add('active');\n        }\n        pageButton.addEventListener('click', () => {\n            loadMoviesPage(page);\n        });\n        paginationContainer.appendChild(pageButton);\n    }\n\n    if (endPage < totalPages) {\n        const ellipsis2 = document.createElement('span');\n        ellipsis2.textContent = '...';\n        paginationContainer.appendChild(ellipsis2);\n\n        const lastPage = Math.min(endPage + increment, totalPages);\n\n        const lastPageButton = document.createElement('button');\n        lastPageButton.textContent = lastPage;\n        lastPageButton.classList.add('page-button');\n        lastPageButton.addEventListener('click', () => {\n            loadMoviesPage(lastPage);\n        });\n        paginationContainer.appendChild(lastPageButton);\n    }\n\n    const lastPageButton = document.createElement('button');\n    lastPageButton.textContent = '>>';\n    lastPageButton.classList.add('page-button','last-button');\n    lastPageButton.addEventListener('click', () => {\n        const nextPage = Math.min(currentPage + 1, totalPages);\n        loadMoviesPage(nextPage);\n    });\n\n    paginationContainer.appendChild(lastPageButton);\n}","function toggleNotification(flag) {\n    const notifyEl = document.querySelector('.notification');\n    console.log(flag);\n    if (flag) {\n      console.log('step1');\n  \n      notifyEl.classList.add('opacityZero');\n      return;\n    }\n    console.log('step2');\n    notifyEl.classList.remove('opacityZero');\n    setTimeout(() => {\n      notifyEl.classList.add('opacityZero');\n    }, 5000);\n    return;\n  }"],"names":["refs","openModalBtn","document","querySelector","closeModalBtn","modal","toggleModal","classList","toggle","addEventListener","$baa48fd5a30d32e8$var$apiKey","$baa48fd5a30d32e8$var$apiUrl","$baa48fd5a30d32e8$var$getMovieDetails","movieId","url","response","fetch","json","error","console","$baa48fd5a30d32e8$var$getPopularMovies","page","urlWithPage","data","movies","results","Promise","all","map","movie","details","id","totalPages","total_pages","$baa48fd5a30d32e8$var$loadMoviesPage","$baa48fd5a30d32e8$export$80c33a899040816b","filmList","innerHTML","movieItems","$baa48fd5a30d32e8$export$605b145a07818080","movieItem","createElement","add","moviePoster","src","poster_path","alt","title","appendChild","movieTitle","textContent","genreNames","genres","genre","name","movieGenres","join","movieYear","releaseYear","Date","release_date","getFullYear","movieRating","rating","vote_average","toFixed","append","$baa48fd5a30d32e8$var$renderPagination","currentPage","paginationContainer","startPage","endPage","Math","min","max","floor","visiblePages","firstPageButton","ellipsis1","pageButton","ellipsis2","lastPage","lastPageButton","$baa48fd5a30d32e8$var$main","window"],"version":3,"file":"index.9f0c4bf3.js.map"}