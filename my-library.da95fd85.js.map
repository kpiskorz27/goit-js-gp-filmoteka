{"mappings":"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","sources":["<anon>","src/my-library.js","src/js/library.js","src/js/queue-gallery.js","src/js/watched-gallery.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequired7c6\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequired7c6\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRequire(\"5PtdM\");\nparcelRequire(\"3xRUa\");\nparcelRequire(\"8sx2c\");\nconst $9da563a3715d9237$var$movieContainer = document.querySelector(\".film-list\");\nconst $9da563a3715d9237$var$paginationContainer = document.querySelector(\".pagination\");\nwindow.addEventListener(\"load\", async ()=>{\n    allMovies = [];\n    if (JSON.parse(localStorage.getItem(\"queue\")) || JSON.parse(localStorage.getItem(\"watched\"))) {\n        const movieOnQueue = await $9da563a3715d9237$export$20616740cc71fc42(\"queue\");\n        const movieOnWatched = await $9da563a3715d9237$export$20616740cc71fc42(\"watched\");\n        allMovies = [\n            ...movieOnQueue,\n            ...movieOnWatched\n        ];\n        $9da563a3715d9237$export$605b145a07818080(allMovies);\n    } else $9da563a3715d9237$var$movieContainer.innerHTML = \"Sorry, there are no films in your library\";\n    $9da563a3715d9237$var$renderPagination(allMovies.length, 1);\n});\nfunction $9da563a3715d9237$export$20616740cc71fc42(key) {\n    try {\n        return JSON.parse(localStorage.getItem(key)) || [];\n    } catch (error) {\n        console.log(error);\n        return [];\n    }\n}\nfunction $9da563a3715d9237$export$605b145a07818080(movieData) {\n    if (movieData.length === 0) {\n        $9da563a3715d9237$var$movieContainer.innerHTML = \"Sorry, there are no films in your library\";\n        return;\n    }\n    const moviesToRender = movieData.slice(0, 10);\n    const markup = moviesToRender.map((movie)=>{\n        const genres = movie.genres || []; // Sprawdzamy, czy gatunki są zdefiniowane\n        let genresText;\n        if (genres.length > 2) genresText = `${genres[0].name === \"Science Fiction\" ? \"Sci-Fi\" : genres[0].name}, ${genres[1].name === \"Science Fiction\" ? \"Sci-Fi\" : genres[1].name}, Other`;\n        else genresText = `${genres[0].name === \"Science Fiction\" ? \"Sci-Fi\" : genres[0].name}, ${genres[1].name === \"Science Fiction\" ? \"Sci-Fi\" : genres[1].name}`;\n        return `<div class=\"movie-item\" data-modal-open data-id=\"${movie.id}\">\n            <img src=\"https://image.tmdb.org/t/p/w500${movie.poster_path}\" alt=\"${movie.title}\" loading=\"lazy\" />\n            <h2>${movie.title}</h2>\n            <div class=\"content-wrapper\">\n                <p>${genresText}</p>\n                <p class=\"movie-year\"> | ${new Date(movie.release_date).getFullYear()}</p>\n                <p class=\"main-rating\">${movie.vote_average.toFixed(1)}</p>\n            </div>\n        </div>`;\n    }).join(\"\");\n    $9da563a3715d9237$var$movieContainer.innerHTML = markup;\n}\n//Renderowanie paginacji dla library//\nfunction $9da563a3715d9237$var$renderPagination(totalItems, currentPage) {\n    const itemsPerPage = 10; // Zmieniłem na 10, ponieważ maksymalnie 10 filmów na stronie\n    const totalPages = Math.ceil(totalItems / itemsPerPage);\n    $9da563a3715d9237$var$paginationContainer.innerHTML = \"\";\n    const firstPageButton = document.createElement(\"button\");\n    firstPageButton.innerHTML = `\n        <svg class=\"icon icon-arrow-left\" viewBox=\"0 0 32 32\" width=\"18\" height=\"20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2.667\" d=\"M25.333 16H6.666M16 25.333 6.667 16 16 6.667\" style=\"stroke:var(--color2, #000)\"/>\n        </svg>\n    `;\n    firstPageButton.style.cursor = \"pointer\";\n    firstPageButton.classList.add(\"page-button\", \"first-button\");\n    if (currentPage > 1) firstPageButton.addEventListener(\"click\", ()=>{\n        const prevPage = Math.max(currentPage - 1, 1);\n        $9da563a3715d9237$export$605b145a07818080(allMovies.slice((prevPage - 1) * itemsPerPage, prevPage * itemsPerPage));\n        $9da563a3715d9237$var$renderPagination(totalItems, prevPage);\n        window.scroll({\n            top: 0,\n            behavior: \"smooth\"\n        });\n    });\n    $9da563a3715d9237$var$paginationContainer.appendChild(firstPageButton);\n    let startPage = 1;\n    let endPage = Math.min(startPage + 4, totalPages);\n    for(let page = startPage; page <= endPage; page++){\n        const pageButton = document.createElement(\"button\");\n        pageButton.textContent = page;\n        pageButton.style.cursor = \"pointer\";\n        pageButton.classList.add(\"page-button\");\n        if (page === currentPage) pageButton.classList.add(\"active\");\n        pageButton.addEventListener(\"click\", ()=>{\n            $9da563a3715d9237$export$605b145a07818080(allMovies.slice((page - 1) * itemsPerPage, page * itemsPerPage));\n            $9da563a3715d9237$var$renderPagination(totalItems, page);\n            window.scroll({\n                top: 0,\n                behavior: \"smooth\"\n            });\n        });\n        $9da563a3715d9237$var$paginationContainer.appendChild(pageButton);\n    }\n    const lastPageButton = document.createElement(\"button\");\n    lastPageButton.innerHTML = `\n        <svg class=\"icon icon-arrow-right\" viewBox=\"0 0 32 32\" width=\"18\" height=\"20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2.667\" d=\"M6.667 16h18.667M16 25.333l9.333-9.333-9.333-9.333\" style=\"stroke:var(--color2, #000)\"/>\n        </svg>\n    `;\n    lastPageButton.classList.add(\"page-button\", \"last-button\");\n    lastPageButton.style.cursor = \"pointer\";\n    lastPageButton.addEventListener(\"click\", ()=>{\n        const nextPage = Math.min(currentPage + 1, totalPages);\n        $9da563a3715d9237$export$605b145a07818080(allMovies.slice((nextPage - 1) * itemsPerPage, nextPage * itemsPerPage));\n        $9da563a3715d9237$var$renderPagination(totalItems, nextPage);\n        window.scroll({\n            top: 0,\n            behavior: \"smooth\"\n        });\n    });\n    $9da563a3715d9237$var$paginationContainer.appendChild(lastPageButton);\n}\n\n\n\nconst $3565da250475ee38$var$filmsPerPage = 18;\nlet $3565da250475ee38$var$currentPage = 1;\nlet $3565da250475ee38$var$moviesOnPage = [];\nlet $3565da250475ee38$var$totalPagesCount = 0;\nconst $3565da250475ee38$var$queueBtn = document.querySelector(\"#gueueButton\");\nconst $3565da250475ee38$var$watchedBtn = document.querySelector(\"#watchedButton\");\nconst $3565da250475ee38$var$movieContainer = document.querySelector(\".film-list\");\n$3565da250475ee38$var$queueBtn.addEventListener(\"click\", async ()=>{\n    $3565da250475ee38$var$loadMoviesPage(1);\n    $3565da250475ee38$var$queueBtn.classList.add(\"active\");\n    $3565da250475ee38$var$watchedBtn.classList.remove(\"active\");\n});\nfunction $3565da250475ee38$var$loadMoviesPage(page) {\n    $3565da250475ee38$var$movieContainer.innerHTML = \"\";\n    if (JSON.parse(localStorage.getItem(\"queue\"))) {\n        const movieOnWatched = (0, $9da563a3715d9237$export$20616740cc71fc42)(\"queue\");\n        const totalPagesCount = Math.ceil(movieOnWatched.length / $3565da250475ee38$var$filmsPerPage);\n        let currentPage = page || 1;\n        let startIndex = (currentPage - 1) * $3565da250475ee38$var$filmsPerPage;\n        let endIndex = startIndex + $3565da250475ee38$var$filmsPerPage;\n        let moviesOnPage = movieOnWatched.slice(startIndex, endIndex);\n        (0, $9da563a3715d9237$export$605b145a07818080)(moviesOnPage);\n        $3565da250475ee38$var$renderPagination(totalPagesCount, currentPage);\n    } else $3565da250475ee38$var$movieContainer.insertAdjacentHTML(\"beforeend\", \"Sorry, there is no films in your watched\");\n}\nfunction $3565da250475ee38$var$renderPagination(totalPages, currentPage) {\n    const paginationContainer = document.querySelector(\".pagination\");\n    paginationContainer.innerHTML = \"\";\n    const visiblePages = 5;\n    const maxButtonsToShow = 1000;\n    const increment = 15;\n    let startPage = 1;\n    let endPage = Math.min(startPage + visiblePages - 1, totalPages);\n    if (totalPages > visiblePages) {\n        const half = Math.floor(visiblePages / 2);\n        startPage = Math.max(currentPage - half, 1);\n        endPage = startPage + visiblePages - 1;\n        if (endPage >= maxButtonsToShow) {\n            endPage = maxButtonsToShow;\n            startPage = Math.max(endPage - visiblePages + 1, 1);\n        }\n    }\n    const firstPageButton = document.createElement(\"button\");\n    firstPageButton.innerHTML = `\n      <svg class=\"icon icon-arrow-left\" viewBox=\"0 0 32 32\" width=\"18\" height=\"20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2.667\" d=\"M25.333 16H6.666M16 25.333 6.667 16 16 6.667\" style=\"stroke:var(--color2, #000)\"/>\n      </svg>\n  `;\n    firstPageButton.style.cursor = \"pointer\";\n    firstPageButton.classList.add(\"page-button\", \"first-button\");\n    firstPageButton.addEventListener(\"click\", ()=>{\n        $3565da250475ee38$var$loadMoviesPage(currentPage - 1);\n    });\n    paginationContainer.appendChild(firstPageButton);\n    if (startPage > 1) {\n        const firstPage = document.createElement(\"button\");\n        firstPage.textContent = 1;\n        firstPage.style.cursor = \"pointer\";\n        firstPage.classList.add(\"page-button\");\n        firstPage.addEventListener(\"click\", ()=>{\n            $3565da250475ee38$var$loadMoviesPage(1);\n        });\n        paginationContainer.appendChild(firstPage);\n        if (startPage > 2) {\n            const ellipsis1 = document.createElement(\"span\");\n            ellipsis1.textContent = \"...\";\n            ellipsis1.classList.add(\"ellipsis-span\");\n            paginationContainer.appendChild(ellipsis1);\n        }\n    }\n    for(let page = startPage; page <= endPage; page++){\n        const pageButton = document.createElement(\"button\");\n        pageButton.textContent = page;\n        pageButton.style.cursor = \"pointer\";\n        pageButton.classList.add(\"page-button\");\n        if (page === currentPage) pageButton.classList.add(\"active\");\n        pageButton.addEventListener(\"click\", ()=>{\n            $3565da250475ee38$var$loadMoviesPage(page);\n        });\n        paginationContainer.appendChild(pageButton);\n    }\n    if (endPage < totalPages) {\n        if (endPage < totalPages - 1) {\n            const ellipsis2 = document.createElement(\"span\");\n            ellipsis2.textContent = \"...\";\n            ellipsis2.classList.add(\"ellipsis-span\");\n            paginationContainer.appendChild(ellipsis2);\n        }\n        const lastPage = Math.min(endPage + increment, totalPages);\n        const lastPageButton = document.createElement(\"button\");\n        lastPageButton.style.cursor = \"pointer\";\n        lastPageButton.textContent = lastPage;\n        lastPageButton.classList.add(\"page-button\");\n        lastPageButton.addEventListener(\"click\", ()=>{\n            $3565da250475ee38$var$loadMoviesPage(lastPage);\n        });\n        paginationContainer.appendChild(lastPageButton);\n    }\n    const lastPageButton = document.createElement(\"button\");\n    lastPageButton.innerHTML = `\n        <svg class=\"icon icon-arrow-right\" viewBox=\"0 0 32 32\" width=\"18\" height=\"20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2.667\" d=\"M6.667 16h18.667M16 25.333l9.333-9.333-9.333-9.333\" style=\"stroke:var(--color2, #000)\"/>\n        </svg>\n    `;\n    lastPageButton.classList.add(\"page-button\", \"last-button\");\n    lastPageButton.style.cursor = \"pointer\";\n    lastPageButton.addEventListener(\"click\", ()=>{\n        const nextPage = Math.min(currentPage + 1, totalPages);\n        $3565da250475ee38$var$loadMoviesPage(nextPage);\n    });\n    paginationContainer.appendChild(lastPageButton);\n}\n\n\n\nconst $b19f8a424240f393$var$filmsPerPage = 18;\nlet $b19f8a424240f393$var$currentPage = 1;\nlet $b19f8a424240f393$var$moviesOnPage = [];\nlet $b19f8a424240f393$var$totalPagesCount = 0;\nconst $b19f8a424240f393$var$watchedBtn = document.querySelector(\"#watchedButton\");\nconst $b19f8a424240f393$var$queueBtn = document.querySelector(\"#gueueButton\");\nconst $b19f8a424240f393$var$movieContainer = document.querySelector(\".film-list\");\n$b19f8a424240f393$var$watchedBtn.addEventListener(\"click\", async ()=>{\n    $b19f8a424240f393$var$loadMoviesPage(1);\n    $b19f8a424240f393$var$queueBtn.classList.remove(\"active\");\n    $b19f8a424240f393$var$watchedBtn.classList.add(\"active\");\n});\nfunction $b19f8a424240f393$var$loadMoviesPage(page) {\n    $b19f8a424240f393$var$movieContainer.innerHTML = \"\";\n    if (JSON.parse(localStorage.getItem(\"watched\"))) {\n        const movieOnWatched = (0, $9da563a3715d9237$export$20616740cc71fc42)(\"watched\");\n        const totalPagesCount = Math.ceil(movieOnWatched.length / $b19f8a424240f393$var$filmsPerPage);\n        let currentPage = page || 1;\n        let startIndex = (currentPage - 1) * $b19f8a424240f393$var$filmsPerPage;\n        let endIndex = startIndex + $b19f8a424240f393$var$filmsPerPage;\n        let moviesOnPage = movieOnWatched.slice(startIndex, endIndex);\n        (0, $9da563a3715d9237$export$605b145a07818080)(moviesOnPage);\n        $b19f8a424240f393$var$renderPagination(totalPagesCount, currentPage);\n    } else $b19f8a424240f393$var$movieContainer.insertAdjacentHTML(\"beforeend\", \"Sorry, there is no films in your watched\");\n}\nfunction $b19f8a424240f393$var$renderPagination(totalPages, currentPage) {\n    const paginationContainer = document.querySelector(\".pagination\");\n    paginationContainer.innerHTML = \"\";\n    const visiblePages = 5;\n    const maxButtonsToShow = 1000;\n    const increment = 15;\n    let startPage = 1;\n    let endPage = Math.min(startPage + visiblePages - 1, totalPages);\n    if (totalPages > visiblePages) {\n        const half = Math.floor(visiblePages / 2);\n        startPage = Math.max(currentPage - half, 1);\n        endPage = startPage + visiblePages - 1;\n        if (endPage >= maxButtonsToShow) {\n            endPage = maxButtonsToShow;\n            startPage = Math.max(endPage - visiblePages + 1, 1);\n        }\n    }\n    const firstPageButton = document.createElement(\"button\");\n    firstPageButton.innerHTML = `\n      <svg class=\"icon icon-arrow-left\" viewBox=\"0 0 32 32\" width=\"18\" height=\"20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2.667\" d=\"M25.333 16H6.666M16 25.333 6.667 16 16 6.667\" style=\"stroke:var(--color2, #000)\"/>\n      </svg>\n  `;\n    firstPageButton.style.cursor = \"pointer\";\n    firstPageButton.classList.add(\"page-button\", \"first-button\");\n    firstPageButton.addEventListener(\"click\", ()=>{\n        $b19f8a424240f393$var$loadMoviesPage(currentPage - 1);\n    });\n    paginationContainer.appendChild(firstPageButton);\n    if (startPage > 1) {\n        const firstPage = document.createElement(\"button\");\n        firstPage.textContent = 1;\n        firstPage.style.cursor = \"pointer\";\n        firstPage.classList.add(\"page-button\");\n        firstPage.addEventListener(\"click\", ()=>{\n            $b19f8a424240f393$var$loadMoviesPage(1);\n        });\n        paginationContainer.appendChild(firstPage);\n        if (startPage > 2) {\n            const ellipsis1 = document.createElement(\"span\");\n            ellipsis1.textContent = \"...\";\n            ellipsis1.classList.add(\"ellipsis-span\");\n            paginationContainer.appendChild(ellipsis1);\n        }\n    }\n    for(let page = startPage; page <= endPage; page++){\n        const pageButton = document.createElement(\"button\");\n        pageButton.textContent = page;\n        pageButton.style.cursor = \"pointer\";\n        pageButton.classList.add(\"page-button\");\n        if (page === currentPage) pageButton.classList.add(\"active\");\n        pageButton.addEventListener(\"click\", ()=>{\n            $b19f8a424240f393$var$loadMoviesPage(page);\n        });\n        paginationContainer.appendChild(pageButton);\n    }\n    if (endPage < totalPages) {\n        if (endPage < totalPages - 1) {\n            const ellipsis2 = document.createElement(\"span\");\n            ellipsis2.textContent = \"...\";\n            ellipsis2.classList.add(\"ellipsis-span\");\n            paginationContainer.appendChild(ellipsis2);\n        }\n        const lastPage = Math.min(endPage + increment, totalPages);\n        const lastPageButton = document.createElement(\"button\");\n        lastPageButton.style.cursor = \"pointer\";\n        lastPageButton.textContent = lastPage;\n        lastPageButton.classList.add(\"page-button\");\n        lastPageButton.addEventListener(\"click\", ()=>{\n            $b19f8a424240f393$var$loadMoviesPage(lastPage);\n        });\n        paginationContainer.appendChild(lastPageButton);\n    }\n    const lastPageButton = document.createElement(\"button\");\n    lastPageButton.innerHTML = `\n        <svg class=\"icon icon-arrow-right\" viewBox=\"0 0 32 32\" width=\"18\" height=\"20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2.667\" d=\"M6.667 16h18.667M16 25.333l9.333-9.333-9.333-9.333\" style=\"stroke:var(--color2, #000)\"/>\n        </svg>\n    `;\n    lastPageButton.classList.add(\"page-button\", \"last-button\");\n    lastPageButton.style.cursor = \"pointer\";\n    lastPageButton.addEventListener(\"click\", ()=>{\n        const nextPage = Math.min(currentPage + 1, totalPages);\n        $b19f8a424240f393$var$loadMoviesPage(nextPage);\n    });\n    paginationContainer.appendChild(lastPageButton);\n}\n\n\n\n\n//# sourceMappingURL=my-library.da95fd85.js.map\n","import './js/add-to-queue';\nimport './js/add-to-watched';\nimport './js/modal-one-film';\nimport './js/library';\nimport './js/queue-gallery';\nimport './js/watched-gallery';\n","const movieContainer = document.querySelector(\".film-list\");\nconst paginationContainer = document.querySelector('.pagination');\n\nwindow.addEventListener('load', async () => {\n    allMovies = [];\n\n    if (JSON.parse(localStorage.getItem(\"queue\")) || JSON.parse(localStorage.getItem(\"watched\"))) {\n        const movieOnQueue = await loadFromLibrary(\"queue\"); \n        const movieOnWatched = await loadFromLibrary(\"watched\");\n        allMovies = [...movieOnQueue, ...movieOnWatched];\n        renderMovieCard(allMovies); \n    }\n    else {\n        movieContainer.innerHTML = \"Sorry, there are no films in your library\";\n    }\n\n    renderPagination(allMovies.length, 1);\n});\n\nexport function loadFromLibrary(key) {\n    try {\n        return JSON.parse(localStorage.getItem(key)) || [];\n    } catch (error) {\n        console.log(error);\n        return [];\n    }\n}\n\n//Renderowanie karty filmu//\n\nexport function renderMovieCard(movieData) {\n    if (movieData.length === 0) {\n        movieContainer.innerHTML = \"Sorry, there are no films in your library\";\n        return;\n    }\n    const moviesToRender = movieData.slice(0, 10);\n    const markup = moviesToRender.map(movie => {\n        const genres = movie.genres || []; // Sprawdzamy, czy gatunki są zdefiniowane\n        let genresText;\n        if (genres.length > 2) {\n            genresText = `${genres[0].name === 'Science Fiction' ? 'Sci-Fi' : genres[0].name}, ${genres[1].name === 'Science Fiction' ? 'Sci-Fi' : genres[1].name}, Other`;\n        } else {\n            genresText = `${genres[0].name === 'Science Fiction' ? 'Sci-Fi' : genres[0].name}, ${genres[1].name === 'Science Fiction' ? 'Sci-Fi' : genres[1].name}`;\n        };\n        return `<div class=\"movie-item\" data-modal-open data-id=\"${movie.id}\">\n            <img src=\"https://image.tmdb.org/t/p/w500${movie.poster_path}\" alt=\"${movie.title}\" loading=\"lazy\" />\n            <h2>${movie.title}</h2>\n            <div class=\"content-wrapper\">\n                <p>${genresText}</p>\n                <p class=\"movie-year\"> | ${new Date(movie.release_date).getFullYear()}</p>\n                <p class=\"main-rating\">${movie.vote_average.toFixed(1)}</p>\n            </div>\n        </div>`;\n    }).join(\"\");\n    \n    movieContainer.innerHTML = markup;\n}\n\n\n\n//Renderowanie paginacji dla library//\n\nfunction renderPagination(totalItems, currentPage) {\n    const itemsPerPage = 10; // Zmieniłem na 10, ponieważ maksymalnie 10 filmów na stronie\n    const totalPages = Math.ceil(totalItems / itemsPerPage);\n    \n    paginationContainer.innerHTML = '';\n\n    const firstPageButton = document.createElement('button');\n    firstPageButton.innerHTML = `\n        <svg class=\"icon icon-arrow-left\" viewBox=\"0 0 32 32\" width=\"18\" height=\"20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2.667\" d=\"M25.333 16H6.666M16 25.333 6.667 16 16 6.667\" style=\"stroke:var(--color2, #000)\"/>\n        </svg>\n    `;\n    firstPageButton.style.cursor = 'pointer';\n    firstPageButton.classList.add('page-button', 'first-button');\n    if (currentPage > 1)\n    firstPageButton.addEventListener('click', () => {\n        const prevPage = Math.max(currentPage - 1, 1); \n        renderMovieCard(allMovies.slice((prevPage - 1) * itemsPerPage, prevPage * itemsPerPage)); \n        renderPagination(totalItems, prevPage); \n        window.scroll({ top: 0, behavior: 'smooth' });\n    });\n    paginationContainer.appendChild(firstPageButton);\n\n    let startPage = 1;\n    let endPage = Math.min(startPage + 4, totalPages);\n\n  \n    for (let page = startPage; page <= endPage; page++) {\n        const pageButton = document.createElement('button');\n        pageButton.textContent = page;\n        pageButton.style.cursor = 'pointer';\n        pageButton.classList.add('page-button');\n        if (page === currentPage) {\n            pageButton.classList.add('active');\n        }\n        pageButton.addEventListener('click', () => {\n            renderMovieCard(allMovies.slice((page - 1) * itemsPerPage, page * itemsPerPage));\n            renderPagination(totalItems, page);\n            window.scroll({ top: 0, behavior: 'smooth' });\n        });\n        paginationContainer.appendChild(pageButton);\n    }\n\n    const lastPageButton = document.createElement('button');\n    lastPageButton.innerHTML = `\n        <svg class=\"icon icon-arrow-right\" viewBox=\"0 0 32 32\" width=\"18\" height=\"20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2.667\" d=\"M6.667 16h18.667M16 25.333l9.333-9.333-9.333-9.333\" style=\"stroke:var(--color2, #000)\"/>\n        </svg>\n    `;\n    lastPageButton.classList.add('page-button', 'last-button');\n    lastPageButton.style.cursor = 'pointer';\n    lastPageButton.addEventListener('click', () => {\n        const nextPage = Math.min(currentPage + 1, totalPages);\n        renderMovieCard(allMovies.slice((nextPage - 1) * itemsPerPage, nextPage * itemsPerPage)); \n        renderPagination(totalItems, nextPage); \n        window.scroll({ top: 0, behavior: 'smooth' });\n    });\n    paginationContainer.appendChild(lastPageButton);\n}\n","import { loadFromLibrary } from \"./library\";\nimport { renderMovieCard } from \"./library\";\n\nconst filmsPerPage = 18;\nlet currentPage = 1;\nlet moviesOnPage = [];\nlet totalPagesCount = 0;\n\nconst queueBtn = document.querySelector(\"#gueueButton\");\nconst watchedBtn = document.querySelector(\"#watchedButton\");\nconst movieContainer = document.querySelector(\".film-list\");\n\nqueueBtn.addEventListener(\"click\", async() => {\n    loadMoviesPage(1);\n    queueBtn.classList.add('active');\n    watchedBtn.classList.remove('active');\n});\n\nfunction loadMoviesPage(page) {\n    movieContainer.innerHTML = \"\";\n    if (JSON.parse(localStorage.getItem(\"queue\"))) {\n          const movieOnWatched = loadFromLibrary(\"queue\");\n          const totalPagesCount = Math.ceil(movieOnWatched.length / filmsPerPage);\n          let currentPage = page || 1;\n          let startIndex = (currentPage - 1) * filmsPerPage;\n          let endIndex = startIndex + filmsPerPage;\n          let moviesOnPage = movieOnWatched.slice(startIndex, endIndex);\n          renderMovieCard(moviesOnPage); \n          renderPagination(totalPagesCount, currentPage);\n    }\n    else {\n        movieContainer.insertAdjacentHTML(\"beforeend\", \"Sorry, there is no films in your watched\");\n    }\n}\n\n\nfunction renderPagination(totalPages, currentPage) {\n    const paginationContainer = document.querySelector('.pagination');\n    paginationContainer.innerHTML = '';\n  \n    const visiblePages = 5;\n    const maxButtonsToShow = 1000;\n    const increment = 15;\n  \n    let startPage = 1;\n    let endPage = Math.min(startPage + visiblePages - 1, totalPages);\n  \n    if (totalPages > visiblePages) {\n      const half = Math.floor(visiblePages / 2);\n      startPage = Math.max(currentPage - half, 1);\n      endPage = startPage + visiblePages - 1;\n      if (endPage >= maxButtonsToShow) {\n        endPage = maxButtonsToShow;\n        startPage = Math.max(endPage - visiblePages + 1, 1);\n      }\n    }\n  \n    const firstPageButton = document.createElement('button');\n    firstPageButton.innerHTML = `\n      <svg class=\"icon icon-arrow-left\" viewBox=\"0 0 32 32\" width=\"18\" height=\"20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2.667\" d=\"M25.333 16H6.666M16 25.333 6.667 16 16 6.667\" style=\"stroke:var(--color2, #000)\"/>\n      </svg>\n  `;\n  \n    firstPageButton.style.cursor = 'pointer';\n    firstPageButton.classList.add('page-button', 'first-button');\n    firstPageButton.addEventListener('click', () => {\n      loadMoviesPage(currentPage - 1);\n    });\n    paginationContainer.appendChild(firstPageButton);\n  \n    if (startPage > 1) {\n      const firstPage = document.createElement('button');\n      firstPage.textContent = 1;\n      firstPage.style.cursor = 'pointer';\n      firstPage.classList.add('page-button');\n      firstPage.addEventListener('click', () => {\n        loadMoviesPage(1);\n      });\n      paginationContainer.appendChild(firstPage);\n  \n      if (startPage > 2) {\n        const ellipsis1 = document.createElement('span');\n        ellipsis1.textContent = '...';\n        ellipsis1.classList.add('ellipsis-span');\n        paginationContainer.appendChild(ellipsis1);\n      }\n    }\n  \n    for (let page = startPage; page <= endPage; page++) {\n      const pageButton = document.createElement('button');\n      pageButton.textContent = page;\n      pageButton.style.cursor = 'pointer';\n      pageButton.classList.add('page-button');\n      if (page === currentPage) {\n        pageButton.classList.add('active');\n      }\n      pageButton.addEventListener('click', () => {\n        loadMoviesPage(page);\n      });\n      paginationContainer.appendChild(pageButton);\n    }\n  \n    if (endPage < totalPages) {\n      if (endPage < totalPages - 1) {\n        const ellipsis2 = document.createElement('span');\n        ellipsis2.textContent = '...';\n        ellipsis2.classList.add('ellipsis-span');\n        paginationContainer.appendChild(ellipsis2);\n      }\n  \n      const lastPage = Math.min(endPage + increment, totalPages);\n  \n      const lastPageButton = document.createElement('button');\n      lastPageButton.style.cursor = 'pointer';\n      lastPageButton.textContent = lastPage;\n      lastPageButton.classList.add('page-button');\n      lastPageButton.addEventListener('click', () => {\n        loadMoviesPage(lastPage);\n      });\n      paginationContainer.appendChild(lastPageButton);\n    }\n  \n    const lastPageButton = document.createElement('button');\n    lastPageButton.innerHTML = `\n        <svg class=\"icon icon-arrow-right\" viewBox=\"0 0 32 32\" width=\"18\" height=\"20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2.667\" d=\"M6.667 16h18.667M16 25.333l9.333-9.333-9.333-9.333\" style=\"stroke:var(--color2, #000)\"/>\n        </svg>\n    `;\n    lastPageButton.classList.add('page-button', 'last-button');\n    lastPageButton.style.cursor = 'pointer';\n    lastPageButton.addEventListener('click', () => {\n      const nextPage = Math.min(currentPage + 1, totalPages);\n      loadMoviesPage(nextPage);\n    });\n  \n    paginationContainer.appendChild(lastPageButton);\n  }","import { loadFromLibrary } from \"./library\";\nimport { renderMovieCard } from \"./library\";\n\nconst filmsPerPage = 18;\nlet currentPage = 1;\nlet moviesOnPage = [];\nlet totalPagesCount = 0;\n\nconst watchedBtn = document.querySelector(\"#watchedButton\");\nconst queueBtn = document.querySelector(\"#gueueButton\");\nconst movieContainer = document.querySelector(\".film-list\");\n\nwatchedBtn.addEventListener(\"click\", async() => {\n    loadMoviesPage(1);\n    queueBtn.classList.remove('active');\n    watchedBtn.classList.add('active');\n});\n\nfunction loadMoviesPage(page) {\n    movieContainer.innerHTML = \"\";\n    if (JSON.parse(localStorage.getItem(\"watched\"))) {\n          const movieOnWatched = loadFromLibrary(\"watched\");\n          const totalPagesCount = Math.ceil(movieOnWatched.length / filmsPerPage);\n          let currentPage = page || 1;\n          let startIndex = (currentPage - 1) * filmsPerPage;\n          let endIndex = startIndex + filmsPerPage;\n          let moviesOnPage = movieOnWatched.slice(startIndex, endIndex);\n          renderMovieCard(moviesOnPage); \n          renderPagination(totalPagesCount, currentPage);\n    }\n    else {\n        movieContainer.insertAdjacentHTML(\"beforeend\", \"Sorry, there is no films in your watched\");\n    }\n}\n\nfunction renderPagination(totalPages, currentPage) {\n    const paginationContainer = document.querySelector('.pagination');\n    paginationContainer.innerHTML = '';\n  \n    const visiblePages = 5;\n    const maxButtonsToShow = 1000;\n    const increment = 15;\n  \n    let startPage = 1;\n    let endPage = Math.min(startPage + visiblePages - 1, totalPages);\n  \n    if (totalPages > visiblePages) {\n      const half = Math.floor(visiblePages / 2);\n      startPage = Math.max(currentPage - half, 1);\n      endPage = startPage + visiblePages - 1;\n      if (endPage >= maxButtonsToShow) {\n        endPage = maxButtonsToShow;\n        startPage = Math.max(endPage - visiblePages + 1, 1);\n      }\n    }\n  \n    const firstPageButton = document.createElement('button');\n    firstPageButton.innerHTML = `\n      <svg class=\"icon icon-arrow-left\" viewBox=\"0 0 32 32\" width=\"18\" height=\"20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2.667\" d=\"M25.333 16H6.666M16 25.333 6.667 16 16 6.667\" style=\"stroke:var(--color2, #000)\"/>\n      </svg>\n  `;\n  \n    firstPageButton.style.cursor = 'pointer';\n    firstPageButton.classList.add('page-button', 'first-button');\n    firstPageButton.addEventListener('click', () => {\n      loadMoviesPage(currentPage - 1);\n    });\n    paginationContainer.appendChild(firstPageButton);\n  \n    if (startPage > 1) {\n      const firstPage = document.createElement('button');\n      firstPage.textContent = 1;\n      firstPage.style.cursor = 'pointer';\n      firstPage.classList.add('page-button');\n      firstPage.addEventListener('click', () => {\n        loadMoviesPage(1);\n      });\n      paginationContainer.appendChild(firstPage);\n  \n      if (startPage > 2) {\n        const ellipsis1 = document.createElement('span');\n        ellipsis1.textContent = '...';\n        ellipsis1.classList.add('ellipsis-span');\n        paginationContainer.appendChild(ellipsis1);\n      }\n    }\n  \n    for (let page = startPage; page <= endPage; page++) {\n      const pageButton = document.createElement('button');\n      pageButton.textContent = page;\n      pageButton.style.cursor = 'pointer';\n      pageButton.classList.add('page-button');\n      if (page === currentPage) {\n        pageButton.classList.add('active');\n      }\n      pageButton.addEventListener('click', () => {\n        loadMoviesPage(page);\n      });\n      paginationContainer.appendChild(pageButton);\n    }\n  \n    if (endPage < totalPages) {\n      if (endPage < totalPages - 1) {\n        const ellipsis2 = document.createElement('span');\n        ellipsis2.textContent = '...';\n        ellipsis2.classList.add('ellipsis-span');\n        paginationContainer.appendChild(ellipsis2);\n      }\n  \n      const lastPage = Math.min(endPage + increment, totalPages);\n  \n      const lastPageButton = document.createElement('button');\n      lastPageButton.style.cursor = 'pointer';\n      lastPageButton.textContent = lastPage;\n      lastPageButton.classList.add('page-button');\n      lastPageButton.addEventListener('click', () => {\n        loadMoviesPage(lastPage);\n      });\n      paginationContainer.appendChild(lastPageButton);\n    }\n  \n    const lastPageButton = document.createElement('button');\n    lastPageButton.innerHTML = `\n        <svg class=\"icon icon-arrow-right\" viewBox=\"0 0 32 32\" width=\"18\" height=\"20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2.667\" d=\"M6.667 16h18.667M16 25.333l9.333-9.333-9.333-9.333\" style=\"stroke:var(--color2, #000)\"/>\n        </svg>\n    `;\n    lastPageButton.classList.add('page-button', 'last-button');\n    lastPageButton.style.cursor = 'pointer';\n    lastPageButton.addEventListener('click', () => {\n      const nextPage = Math.min(currentPage + 1, totalPages);\n      loadMoviesPage(nextPage);\n    });\n  \n    paginationContainer.appendChild(lastPageButton);\n  }"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$9da563a3715d9237$var$movieContainer","document","querySelector","$9da563a3715d9237$var$paginationContainer","$9da563a3715d9237$export$20616740cc71fc42","key","JSON","parse","localStorage","getItem","error","console","log","$9da563a3715d9237$export$605b145a07818080","movieData","length","innerHTML","markup","moviesToRender","slice","map","movie","genresText","genres","name","poster_path","title","Date","release_date","getFullYear","vote_average","toFixed","join","window","addEventListener","allMovies","$9da563a3715d9237$var$renderPagination","totalItems","currentPage","totalPages","Math","ceil","firstPageButton","createElement","style","cursor","classList","add","prevPage","max","scroll","top","behavior","appendChild","endPage","min","startPage","page","pageButton","textContent","lastPageButton","nextPage","$3565da250475ee38$var$queueBtn","$3565da250475ee38$var$watchedBtn","$3565da250475ee38$var$movieContainer","$3565da250475ee38$var$loadMoviesPage","movieOnWatched","totalPagesCount","startIndex","$3565da250475ee38$var$renderPagination","paginationContainer","floor","visiblePages","firstPage","ellipsis1","ellipsis2","lastPage","insertAdjacentHTML","remove","$b19f8a424240f393$var$watchedBtn","$b19f8a424240f393$var$queueBtn","$b19f8a424240f393$var$movieContainer","$b19f8a424240f393$var$loadMoviesPage","$b19f8a424240f393$var$renderPagination"],"version":3,"file":"my-library.da95fd85.js.map"}